basePath: /api/v1
definitions:
  in_memory_database.CollectionCreateRequest:
    properties:
      collections:
        items:
          $ref: '#/definitions/in_memory_database.CollectionInput'
        type: array
      databaseName:
        type: string
    type: object
  in_memory_database.CollectionCreateResult:
    properties:
      data:
        type: string
    type: object
  in_memory_database.CollectionDeleteRequest:
    properties:
      collections:
        items:
          type: string
        type: array
      databaseName:
        type: string
    type: object
  in_memory_database.CollectionDeleteResult:
    properties:
      data:
        type: string
    type: object
  in_memory_database.CollectionGetAllRequest:
    properties:
      databaseName:
        type: string
    type: object
  in_memory_database.CollectionGetAllResult:
    properties:
      data:
        items:
          type: string
        type: array
    type: object
  in_memory_database.CollectionInput:
    properties:
      collectionName:
        description: 'Example: collectionName'
        type: string
      indexKeys:
        description: 'Example: indexKeys'
        items:
          type: string
        type: array
    type: object
  in_memory_database.CollectionStatsRequest:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
    type: object
  in_memory_database.DatabaseConnectResult:
    properties:
      data:
        $ref: '#/definitions/in_memory_database.DatabaseResult'
    type: object
  in_memory_database.DatabaseCreateRequest:
    properties:
      collections:
        items:
          $ref: '#/definitions/in_memory_database.CollectionInput'
        type: array
      databaseName:
        type: string
    type: object
  in_memory_database.DatabaseCreateResult:
    properties:
      data:
        type: string
      error:
        type: string
    type: object
  in_memory_database.DatabaseDeleteRequest:
    properties:
      databaseName:
        type: string
    type: object
  in_memory_database.DatabaseDeleteResult:
    properties:
      data:
        type: string
    type: object
  in_memory_database.DatabaseGetAllResult:
    properties:
      data:
        items:
          type: string
        type: array
    type: object
  in_memory_database.DatabaseResult:
    properties:
      collections:
        items:
          type: string
        type: array
      databaseName:
        type: string
    type: object
  in_memory_database.Document:
    additionalProperties: true
    type: object
  in_memory_database.DocumentCreateRequest:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
      document:
        $ref: '#/definitions/in_memory_database.Document'
    type: object
  in_memory_database.DocumentDeleteRequest:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
      docId:
        type: string
    type: object
  in_memory_database.DocumentFilterRequest:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
      filter:
        $ref: '#/definitions/in_memory_database.MapInterface'
    type: object
  in_memory_database.DocumentGetAllRequest:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
    type: object
  in_memory_database.DocumentReadRequest:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
      docId:
        type: string
    type: object
  in_memory_database.DocumentUpdateRequest:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
      docId:
        type: string
      document:
        $ref: '#/definitions/in_memory_database.Document'
    type: object
  in_memory_database.IndexIdsmap:
    additionalProperties:
      $ref: '#/definitions/in_memory_database.MapString'
    type: object
  in_memory_database.IndexMap:
    additionalProperties:
      $ref: '#/definitions/in_memory_database.IndexIdsmap'
    type: object
  in_memory_database.MapInterface:
    additionalProperties: true
    type: object
  in_memory_database.MapString:
    additionalProperties:
      type: string
    type: object
host: localhost:5454
info:
  contact:
    email: nanda03dev@gmail.com
    name: Nanda Kumar
    url: https://twitter.com/nanda0311
  description: No sql database in Go using Gin framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: GnoSQL Database
  version: "1.0"
paths:
  /collection/add:
    post:
      consumes:
      - application/json
      description: To create a new collection in a specific database
      parameters:
      - description: databaseName, collections
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.CollectionCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Collection created successfully
          schema:
            $ref: '#/definitions/in_memory_database.CollectionCreateResult'
        "400":
          description: Collection already exists or error while binding JSON
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create new collection
      tags:
      - collection
  /collection/delete:
    post:
      consumes:
      - application/json
      description: To delete a collection from a specific database
      parameters:
      - description: databaseName, collections
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.CollectionDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Collection deleted successfully
          schema:
            $ref: '#/definitions/in_memory_database.CollectionDeleteResult'
        "400":
          description: Unexpected error while deleting collection or error while binding
            JSON
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete collection
      tags:
      - collection
  /collection/get-all:
    post:
      description: Retrieve all collections from a specific database
      parameters:
      - description: databaseName
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.CollectionGetAllRequest'
      produces:
      - application/json
      responses:
        "200":
          description: List of all collections
          schema:
            items:
              $ref: '#/definitions/in_memory_database.CollectionGetAllResult'
            type: array
        "400":
          description: Error while fetching collections or invalid database
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all collections
      tags:
      - collection
  /collection/stats:
    post:
      description: Retrieve statistics for a specific collection in a database
      parameters:
      - description: databaseName, collectionName
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.CollectionStatsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Collection statistics
          schema:
            $ref: '#/definitions/in_memory_database.IndexMap'
        "400":
          description: Database or Collection not found or deleted
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Collection stats
      tags:
      - collection
  /database/add:
    post:
      consumes:
      - application/json
      description: To create a new database
      parameters:
      - description: Database creation request containing databaseName and collections
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DatabaseCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Database created successfully
          schema:
            $ref: '#/definitions/in_memory_database.DatabaseCreateResult'
        "400":
          description: Database already exists or error while binding JSON
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create new database
      tags:
      - database
  /database/connect:
    post:
      consumes:
      - application/json
      description: Connect to an existing database
      parameters:
      - description: databaseName, collections
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DatabaseCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Connected successfully
          schema:
            $ref: '#/definitions/in_memory_database.DatabaseConnectResult'
        "400":
          description: Something went wrong or error while binding JSON
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Connect to database
      tags:
      - database
  /database/delete:
    post:
      consumes:
      - application/json
      description: To delete a database
      parameters:
      - description: databaseName
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DatabaseDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Database deleted successfully
          schema:
            $ref: '#/definitions/in_memory_database.DatabaseDeleteResult'
        "400":
          description: Unexpected error while deleting database or error while binding
            JSON
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete database
      tags:
      - database
  /database/get-all:
    get:
      description: Retrieve a list of all databases
      produces:
      - application/json
      responses:
        "200":
          description: List of all databases
          schema:
            items:
              $ref: '#/definitions/in_memory_database.DatabaseGetAllResult'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all databases
      tags:
      - database
  /database/load-to-disk:
    get:
      description: Load database to disk for persistence
      produces:
      - application/json
      responses:
        "200":
          description: Database loaded to disk successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error loading database to disk
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Load database to disk
      tags:
      - database
  /document/{id}:
    get:
      description: Read document by id.
      parameters:
      - description: databaseName, collectionName, docId
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DocumentReadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/in_memory_database.Document'
        "400":
          description: Database/Collection deleted
      summary: Read by id
      tags:
      - document
    post:
      description: To delete document
      parameters:
      - description: databaseName, collectionName, docId
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DocumentDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/in_memory_database.Document'
        "400":
          description: Database/Collection deleted
      summary: Delete document
      tags:
      - document
  /document/add:
    post:
      description: To create new document
      parameters:
      - description: databaseName, collectionName
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DocumentCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Document created successfully
        "400":
          description: Database/Collection deleted
      summary: Create new document
      tags:
      - document
  /document/all-data:
    post:
      description: Read all document
      parameters:
      - description: databaseName, collectionName
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DocumentGetAllRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/in_memory_database.Document'
            type: array
        "400":
          description: Database/Collection deleted
      summary: Read all document
      tags:
      - document
  /document/filter:
    post:
      description: Filter document
      parameters:
      - description: databaseName, collectionName, filter
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/in_memory_database.DocumentFilterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/in_memory_database.Document'
            type: array
        "400":
          description: Database/Collection deleted
      summary: Filter document
      tags:
      - document
  /generate-seed-data:
    get:
      description: This will create generate seed database.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: generate seed database
      tags:
      - generate-seed-data
swagger: "2.0"
