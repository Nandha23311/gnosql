{
    "swagger": "2.0",
    "info": {
        "description": "No sql database in Go using Gin framework.",
        "title": "GnoSQL Database",
        "contact": {
            "name": "Nanda Kumar",
            "url": "https://twitter.com/nanda0311",
            "email": "nanda03dev@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:5454",
    "basePath": "/api/v1",
    "paths": {
        "/collection/add": {
            "post": {
                "description": "To create a new collection in a specific database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Create new collection",
                "parameters": [
                    {
                        "description": "databaseName, collections",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.CollectionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection created successfully",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.CollectionCreateResult"
                        }
                    },
                    "400": {
                        "description": "Collection already exists or error while binding JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/collection/delete": {
            "post": {
                "description": "To delete a collection from a specific database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Delete collection",
                "parameters": [
                    {
                        "description": "databaseName, collections",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.CollectionDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.CollectionDeleteResult"
                        }
                    },
                    "400": {
                        "description": "Unexpected error while deleting collection or error while binding JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/collection/get-all": {
            "post": {
                "description": "Retrieve all collections from a specific database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Get all collections",
                "parameters": [
                    {
                        "description": "databaseName",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.CollectionGetAllRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all collections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/in_memory_database.CollectionGetAllResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Error while fetching collections or invalid database",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/collection/stats": {
            "post": {
                "description": "Retrieve statistics for a specific collection in a database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Collection stats",
                "parameters": [
                    {
                        "description": "databaseName, collectionName",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.CollectionStatsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection statistics",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.IndexMap"
                        }
                    },
                    "400": {
                        "description": "Database or Collection not found or deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/database/add": {
            "post": {
                "description": "To create a new database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Create new database",
                "parameters": [
                    {
                        "description": "Database creation request containing databaseName and collections",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DatabaseCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Database created successfully",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DatabaseCreateResult"
                        }
                    },
                    "400": {
                        "description": "Database already exists or error while binding JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/database/connect": {
            "post": {
                "description": "Connect to an existing database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Connect to database",
                "parameters": [
                    {
                        "description": "databaseName, collections",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DatabaseCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connected successfully",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DatabaseConnectResult"
                        }
                    },
                    "400": {
                        "description": "Something went wrong or error while binding JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/database/delete": {
            "post": {
                "description": "To delete a database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Delete database",
                "parameters": [
                    {
                        "description": "databaseName",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DatabaseDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Database deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DatabaseDeleteResult"
                        }
                    },
                    "400": {
                        "description": "Unexpected error while deleting database or error while binding JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/database/get-all": {
            "get": {
                "description": "Retrieve a list of all databases",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Get all databases",
                "responses": {
                    "200": {
                        "description": "List of all databases",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/in_memory_database.DatabaseGetAllResult"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/database/load-to-disk": {
            "get": {
                "description": "Load database to disk for persistence",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Load database to disk",
                "responses": {
                    "200": {
                        "description": "Database loaded to disk successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error loading database to disk",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/document/add": {
            "post": {
                "description": "To create new document",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Create new document",
                "parameters": [
                    {
                        "description": "databaseName, collectionName",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DocumentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document created successfully"
                    },
                    "400": {
                        "description": "Database/Collection deleted"
                    }
                }
            }
        },
        "/document/all-data": {
            "post": {
                "description": "Read all document",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Read all document",
                "parameters": [
                    {
                        "description": "databaseName, collectionName",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DocumentGetAllRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/in_memory_database.Document"
                            }
                        }
                    },
                    "400": {
                        "description": "Database/Collection deleted"
                    }
                }
            }
        },
        "/document/filter": {
            "post": {
                "description": "Filter document",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Filter document",
                "parameters": [
                    {
                        "description": "databaseName, collectionName, filter",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DocumentFilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/in_memory_database.Document"
                            }
                        }
                    },
                    "400": {
                        "description": "Database/Collection deleted"
                    }
                }
            }
        },
        "/document/{id}": {
            "get": {
                "description": "Read document by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Read by id",
                "parameters": [
                    {
                        "description": "databaseName, collectionName, docId",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DocumentReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.Document"
                        }
                    },
                    "400": {
                        "description": "Database/Collection deleted"
                    }
                }
            },
            "post": {
                "description": "To delete document",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Delete document",
                "parameters": [
                    {
                        "description": "databaseName, collectionName, docId",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.DocumentDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/in_memory_database.Document"
                        }
                    },
                    "400": {
                        "description": "Database/Collection deleted"
                    }
                }
            }
        },
        "/generate-seed-data": {
            "get": {
                "description": "This will create generate seed database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generate-seed-data"
                ],
                "summary": "generate seed database",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "in_memory_database.CollectionCreateRequest": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/in_memory_database.CollectionInput"
                    }
                },
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.CollectionCreateResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.CollectionDeleteRequest": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.CollectionDeleteResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.CollectionGetAllRequest": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.CollectionGetAllResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "in_memory_database.CollectionInput": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "description": "Example: collectionName",
                    "type": "string"
                },
                "indexKeys": {
                    "description": "Example: indexKeys",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "in_memory_database.CollectionStatsRequest": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DatabaseConnectResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/in_memory_database.DatabaseResult"
                }
            }
        },
        "in_memory_database.DatabaseCreateRequest": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/in_memory_database.CollectionInput"
                    }
                },
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DatabaseCreateResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DatabaseDeleteRequest": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DatabaseDeleteResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DatabaseGetAllResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "in_memory_database.DatabaseResult": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.Document": {
            "type": "object",
            "additionalProperties": true
        },
        "in_memory_database.DocumentCreateRequest": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "document": {
                    "$ref": "#/definitions/in_memory_database.Document"
                }
            }
        },
        "in_memory_database.DocumentDeleteRequest": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "docId": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DocumentFilterRequest": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/in_memory_database.MapInterface"
                }
            }
        },
        "in_memory_database.DocumentGetAllRequest": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DocumentReadRequest": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "docId": {
                    "type": "string"
                }
            }
        },
        "in_memory_database.DocumentUpdateRequest": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "docId": {
                    "type": "string"
                },
                "document": {
                    "$ref": "#/definitions/in_memory_database.Document"
                }
            }
        },
        "in_memory_database.IndexIdsmap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/in_memory_database.MapString"
            }
        },
        "in_memory_database.IndexMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/in_memory_database.IndexIdsmap"
            }
        },
        "in_memory_database.MapInterface": {
            "type": "object",
            "additionalProperties": true
        },
        "in_memory_database.MapString": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        }
    }
}